# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

bin_PROGRAMS += qt/carpincho-qt

if BUILD_CARPINCHO_GUI
  bin_PROGRAMS += carpincho-gui
endif

EXTRA_LIBRARIES += qt/libcarpinchoqt.a

# carpincho qt core #
include Makefile.qt_locale.include

QT_FORMS_UI = \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/createwalletdialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/helpmessagedialog.ui \
  qt/forms/intro.ui \
  qt/forms/modaloverlay.ui \
  qt/forms/openuridialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/psbtoperationsdialog.ui \
  qt/forms/receivecoinsdialog.ui \
  qt/forms/receiverequestdialog.ui \
  qt/forms/debugwindow.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui

QT_MOC_CPP = \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_createwalletdialog.cpp \
  qt/moc_bantablemodel.cpp \
  qt/moc_carpinchoaddressvalidator.cpp \
  qt/moc_carpinchoamountfield.cpp \
  qt/moc_carpincho.cpp \
  qt/moc_carpinchogui.cpp \
  qt/moc_carpinchounits.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_intro.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_modaloverlay.cpp \
  qt/moc_notificator.cpp \
  qt/moc_openuridialog.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_peertablemodel.cpp \
  qt/moc_paymentserver.cpp \
  qt/moc_psbtoperationsdialog.cpp \
  qt/moc_qrimagewidget.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_receivecoinsdialog.cpp \
  qt/moc_receiverequestdialog.cpp \
  qt/moc_recentrequeststablemodel.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_splashscreen.cpp \
  qt/moc_trafficgraphwidget.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_utilitydialog.cpp \
  qt/moc_walletcontroller.cpp \
  qt/moc_walletframe.cpp \
  qt/moc_walletmodel.cpp \
  qt/moc_walletview.cpp

CARPINCHO_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm \
  qt/macos_appnap.mm

QT_MOC = \
  qt/carpinchoamountfield.moc \
  qt/intro.moc \
  qt/overviewpage.moc \
  qt/rpcconsole.moc

QT_QRC_CPP = qt/qrc_carpincho.cpp
QT_QRC = qt/carpincho.qrc
QT_QRC_LOCALE_CPP = qt/qrc_carpincho_locale.cpp
QT_QRC_LOCALE = qt/carpincho_locale.qrc

CARPINCHO_QT_H = \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bantablemodel.h \
  qt/carpinchoaddressvalidator.h \
  qt/carpinchoamountfield.h \
  qt/carpincho.h \
  qt/carpinchogui.h \
  qt/carpinchounits.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/createwalletdialog.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/intro.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/macos_appnap.h \
  qt/modaloverlay.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/openuridialog.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/paymentserver.h \
  qt/peertablemodel.h \
  qt/platformstyle.h \
  qt/psbtoperationsdialog.h \
  qt/qrimagewidget.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/receivecoinsdialog.h \
  qt/receiverequestdialog.h \
  qt/recentrequeststablemodel.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/sendcoinsrecipient.h \
  qt/signverifymessagedialog.h \
  qt/splashscreen.h \
  qt/trafficgraphwidget.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/utilitydialog.h \
  qt/walletcontroller.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/walletview.h \
  qt/winshutdownmonitor.h

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/address-book.png \
  qt/res/icons/carpincho.ico \
  qt/res/icons/carpincho_testnet.ico \
  qt/res/icons/carpincho.png \
  qt/res/icons/chevron.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/connect0.png \
  qt/res/icons/connect1.png \
  qt/res/icons/connect2.png \
  qt/res/icons/connect3.png \
  qt/res/icons/connect4.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/export.png \
  qt/res/icons/eye.png \
  qt/res/icons/eye_minus.png \
  qt/res/icons/eye_plus.png \
  qt/res/icons/fontbigger.png \
  qt/res/icons/fontsmaller.png \
  qt/res/icons/hd_disabled.png \
  qt/res/icons/hd_enabled.png \
  qt/res/icons/history.png \
  qt/res/icons/lock_closed.png \
  qt/res/icons/lock_open.png \
  qt/res/icons/network_disabled.png \
  qt/res/icons/overview.png \
  qt/res/icons/proxy.png \
  qt/res/icons/receive.png \
  qt/res/icons/remove.png \
  qt/res/icons/send.png \
  qt/res/icons/synced.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_abandoned.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx_inout.png \
  qt/res/icons/tx_input.png \
  qt/res/icons/tx_output.png \
  qt/res/icons/tx_mined.png \
  qt/res/icons/warning.png

CARPINCHO_QT_BASE_CPP = \
  qt/bantablemodel.cpp \
  qt/carpincho.cpp \
  qt/carpinchoaddressvalidator.cpp \
  qt/carpinchoamountfield.cpp \
  qt/carpinchogui.cpp \
  qt/carpinchounits.cpp \
  qt/clientmodel.cpp \
  qt/csvmodelwriter.cpp \
  qt/guiutil.cpp \
  qt/intro.cpp \
  qt/modaloverlay.cpp \
  qt/networkstyle.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/peertablemodel.cpp \
  qt/platformstyle.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/splashscreen.cpp \
  qt/trafficgraphwidget.cpp \
  qt/utilitydialog.cpp

CARPINCHO_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp

CARPINCHO_QT_WALLET_CPP = \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/createwalletdialog.cpp \
  qt/editaddressdialog.cpp \
  qt/openuridialog.cpp \
  qt/overviewpage.cpp \
  qt/paymentserver.cpp \
  qt/psbtoperationsdialog.cpp \
  qt/qrimagewidget.cpp \
  qt/receivecoinsdialog.cpp \
  qt/receiverequestdialog.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletcontroller.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp \
  qt/walletview.cpp

CARPINCHO_QT_CPP = $(CARPINCHO_QT_BASE_CPP)
if TARGET_WINDOWS
CARPINCHO_QT_CPP += $(CARPINCHO_QT_WINDOWS_CPP)
endif
if ENABLE_WALLET
CARPINCHO_QT_CPP += $(CARPINCHO_QT_WALLET_CPP)
endif # ENABLE_WALLET

RES_ANIMATION = $(wildcard $(srcdir)/qt/res/animation/spinner-*.png)

CARPINCHO_RC = qt/res/carpincho-qt-res.rc

CARPINCHO_QT_INCLUDES = -DQT_NO_KEYWORDS

qt_libcarpinchoqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(CARPINCHO_INCLUDES) $(CARPINCHO_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)
qt_libcarpinchoqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
qt_libcarpinchoqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)

qt_libcarpinchoqt_a_SOURCES = $(CARPINCHO_QT_CPP) $(CARPINCHO_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_ANIMATION)
if TARGET_DARWIN
  qt_libcarpinchoqt_a_SOURCES += $(CARPINCHO_MM)
endif

nodist_qt_libcarpinchoqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libcarpinchoqt_a_OBJECTS) $(qt_carpincho_qt_OBJECTS) $(carpincho_gui_OBJECTS) : | $(QT_MOC)

# carpincho-qt and carpincho-gui binaries #
carpincho_qt_cppflags = $(AM_CPPFLAGS) $(CARPINCHO_INCLUDES) $(CARPINCHO_QT_INCLUDES) \
  $(QT_INCLUDES) $(QR_CFLAGS)
carpincho_qt_cxxflags = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

carpincho_qt_sources = qt/main.cpp
if TARGET_WINDOWS
  carpincho_qt_sources += $(CARPINCHO_RC)
endif
carpincho_qt_ldadd = qt/libcarpinchoqt.a $(LIBCARPINCHO_SERVER)
if ENABLE_WALLET
carpincho_qt_ldadd += $(LIBCARPINCHO_UTIL) $(LIBCARPINCHO_WALLET)
endif
if ENABLE_ZMQ
carpincho_qt_ldadd += $(LIBCARPINCHO_ZMQ) $(ZMQ_LIBS)
endif
carpincho_qt_ldadd += $(LIBCARPINCHO_CLI) $(LIBCARPINCHO_COMMON) $(LIBCARPINCHO_UTIL) $(LIBCARPINCHO_CONSENSUS) $(LIBCARPINCHO_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)
carpincho_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
carpincho_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX

qt_carpincho_qt_CPPFLAGS = $(carpincho_qt_cppflags)
qt_carpincho_qt_CXXFLAGS = $(carpincho_qt_cxxflags)
qt_carpincho_qt_SOURCES = $(carpincho_qt_sources)
qt_carpincho_qt_LDADD = $(carpincho_qt_ldadd)
qt_carpincho_qt_LDFLAGS = $(carpincho_qt_ldflags)
qt_carpincho_qt_LIBTOOLFLAGS = $(carpincho_qt_libtoolflags)

carpincho_gui_CPPFLAGS = $(carpincho_qt_cppflags)
carpincho_gui_CXXFLAGS = $(carpincho_qt_cxxflags)
carpincho_gui_SOURCES = $(carpincho_qt_sources)
carpincho_gui_LDADD = $(carpincho_qt_ldadd)
carpincho_gui_LDFLAGS = $(carpincho_qt_ldflags)
carpincho_gui_LIBTOOLFLAGS = $(carpincho_qt_libtoolflags)

#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

$(srcdir)/qt/carpinchostrings.cpp: FORCE
	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" $(PYTHON) ../share/qt/extract_strings_qt.py $(libcarpincho_server_a_SOURCES) $(libcarpincho_wallet_a_SOURCES) $(libcarpincho_common_a_SOURCES) $(libcarpincho_zmq_a_SOURCES) $(libcarpincho_consensus_a_SOURCES) $(libcarpincho_util_a_SOURCES)

translate: $(srcdir)/qt/carpinchostrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(CARPINCHO_QT_BASE_CPP) qt/carpincho.cpp $(CARPINCHO_QT_WINDOWS_CPP) $(CARPINCHO_QT_WALLET_CPP) $(CARPINCHO_QT_H) $(CARPINCHO_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/carpincho_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name carpincho_locale $(@D)/temp_$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_ANIMATION)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name carpincho $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

CLEAN_QT = $(nodist_qt_libcarpinchoqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_carpincho_locale.qrc

CLEANFILES += $(CLEAN_QT)

carpincho_qt_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_libcarpinchoqt_a_OBJECTS) $(qt_carpincho_qt_OBJECTS) qt/carpincho-qt$(EXEEXT) $(LIBCARPINCHOQT)

carpincho_qt : qt/carpincho-qt$(EXEEXT)

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
